[["index.html", "Dashboard - continent Chapter 1 Welcome 1.1 Learn all about Bookdown", " Dashboard - continent Julien Daranlot 2022-04-11 Chapter 1 Welcome hi It’s possible to create beautiful books for free using RStudio’s R Markdown and Yihui Xie’s bookdown and hosting them on Github. This is pretty new and incredibly cool. It is a really powerful way to communicate science using the same reproducible workflow you use for your analyses and collaborations. This tutorial borrows heavily from a lot of great tutorials and resources you should check out too – there are links throughout. It also parallels a previous tutorial Making free websites with RStudio’s R Markdown. The best way to learn is to follow along with your own laptop, but all are welcome. We’ll spend half the time with the tutorial and half the time for you to work on your own website and get help. If you bring your laptop please do this beforehand: install RStudio create a GitHub account (advice) set up your computer to talk to GitHub have RStudio linked directly (highly recommended) (instructions sections 8-14) or install the Desktop App or be familiar with git commands for the command line (tutorial) Examples: We have been using bookdown for the Ocean Health Index: ohi-science.org/data-science-training and Openscapes: openscapes.org/series. And R Markdown is much more than books and websites – here’s a one-minute video about R Markdown to get you excited. 1.1 Learn all about Bookdown The best way to learn more about bookdown is from Yihui Xie himself. You can read his book bookdown: Authoring Books and Technical Documents with R Markdown or watch his webinar introducing bookdown. "],["préparation-des-données.html", "Chapter 2 Préparation des données 2.1 Population 2.2 Nourriture 2.3 Source et type d’énergie", " Chapter 2 Préparation des données Les fichiers sont chargés, manipulés puis enregistrés au format RData. 2.1 Population # Chargement des bibliothèques et du working directory population &lt;- read_delim(&quot;WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES_UN.csv&quot;, skip = 16, na = &quot;...&quot;, locale = locale(decimal_mark = &quot;,&quot;)) |&gt; rename(&quot;region&quot; = 3) |&gt; select(-Index, -Variant, -Notes, -&quot;Country code&quot;, -&quot;Parent code&quot;) |&gt; filter(Type %in% c(&quot;World&quot;, &quot;Region&quot;, &quot;Country/Area&quot;)) |&gt; mutate(iso_code2=countrycode(region, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;)) |&gt; mutate(iso_pays=countrycode(iso_code2, origin = &quot;iso3c&quot;, destination = &quot;country.name&quot;)) |&gt; pivot_longer(cols = &quot;1950&quot;:&quot;2020&quot;, names_to = &quot;annee&quot;, values_to = &quot;population&quot;) |&gt; mutate(region = str_replace(region, &quot;Latin America and the Caribbean&quot;, &quot;South America&quot;)) |&gt; mutate(annee = as.integer(annee)) |&gt; mutate(population = population*1000) save(population, file = &quot;population.Rdata&quot;) 2.2 Nourriture nourriture &lt;- read_delim(&quot;Production_Crops_Livestock_E_All_Data.csv&quot;, locale = locale(encoding = &#39;ISO-8859-1&#39;)) |&gt; select(-ends_with(&quot;F&quot;)) |&gt; select(2,4,6,Y1961:Y2020) |&gt; filter (Element == &quot;Production&quot;) |&gt; select(-Element) |&gt; filter(str_detect(Item, &quot;Total&quot;)) |&gt; mutate(Item=str_replace(Item,&quot;, Total&quot;,&quot;&quot;)) |&gt; rename(&quot;region&quot; = &quot;Area&quot;) |&gt; mutate(iso_code2=countrycode(region, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;)) |&gt; mutate(iso_pays=countrycode(iso_code2, origin = &quot;iso3c&quot;, destination = &quot;country.name&quot;)) |&gt; pivot_longer(cols=Y1961:Y2020, names_to = &quot;annee&quot;, values_to = &quot;production&quot;) |&gt; mutate(annee = str_sub(annee, start=2)) |&gt; mutate(annee = as.integer(annee)) save(nourriture, file = &quot;nourriture.Rdata&quot;) 2.3 Source et type d’énergie # Chargement des codes iso code_iso &lt;- read_delim(&quot;countries_iso_codes.csv&quot;) |&gt; select(3,6,7) # Table energy globale energy &lt;- read_delim(&quot;owid-energy-data__OWID.csv&quot;) |&gt; select(-iso_code) |&gt; select(1:2, ends_with(&quot;consumption&quot;)) |&gt; mutate(iso_code2=countrycode(country, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;)) |&gt; mutate(iso_pays=countrycode(iso_code2, origin = &quot;iso3c&quot;, destination = &quot;country.name&quot;)) |&gt; pivot_longer(cols=&quot;biofuel_consumption&quot;:&quot;wind_consumption&quot;, names_to = &quot;energy_source&quot;, values_to = &quot;consumption&quot;) |&gt; mutate(energy_source = str_remove(energy_source, &quot;_consumption&quot;)) |&gt; mutate(iso_code2=countrycode(country, origin = &quot;country.name&quot;, destination = &quot;iso3c&quot;)) |&gt; mutate(iso_pays=countrycode(iso_code2, origin = &quot;iso3c&quot;, destination = &quot;country.name&quot;)) |&gt; rename(&quot;annee&quot;=&quot;year&quot;) |&gt; left_join(code_iso, by = c(&quot;iso_code2&quot; = &quot;alpha-3&quot;)) |&gt; rename(&quot;sub_region&quot; = &quot;sub-region&quot;) |&gt; # Remplacement de la region par la sous-region pour region = americas # Attribution des continents pour les pays sans code ISO mutate(region = case_when(region == &quot;Americas&quot; ~ sub_region, country == &quot;Kosovo&quot; ~ &quot;Europe&quot;, country == &quot;Czechoslovakia&quot; ~ &quot;Europe&quot;, country == &quot;Yugoslavia&quot; ~ &quot;Europe&quot;, country == &quot;Netherlands Antilles&quot; ~ &quot;Latin America and the Caribbean&quot;, country == &quot;Timor&quot; ~ &quot;Asia&quot;, TRUE ~ as.character(region))) |&gt; mutate(region = str_replace(region, &quot;Latin America and the Caribbean&quot;, &quot;South America&quot;)) |&gt; select(-sub_region) # Table Sources d&#39;énergie energy_source &lt;- energy |&gt; filter(energy_source != &quot;fossil_fuel&quot; &amp; energy_source != &quot;other_renewable&quot; &amp; energy_source != &quot;primary_energy&quot; &amp; energy_source != &quot;low_carbon&quot; &amp; energy_source != &quot;renewables&quot;) save(energy_source, file = &quot;energy_source.Rdata&quot;) # Table des types d&#39;énergie energy_type &lt;- energy |&gt; rename(&quot;energy_type&quot; = &quot;energy_source&quot;) |&gt; filter(energy_type == &quot;fossil_fuel&quot; | energy_type == &quot;primary_energy&quot; | energy_type == &quot;other_renewable&quot; | energy_type == &quot;renewables&quot;) save(energy_type, file = &quot;energy_type.Rdata&quot;) "],["graphiques.html", "Chapter 3 Graphiques 3.1 Echelle mondiale 3.2 Analyse par continent 3.3 Analyse par pays 3.4 Column 3.5 Column 3.6 Column 3.7 Column", " Chapter 3 Graphiques 3.1 Echelle mondiale 3.1.1 Population load (&quot;population.Rdata&quot;) population_mondiale &lt;- population |&gt; filter(region == &quot;WORLD&quot;) save(population_mondiale, file = &quot;population_mondiale.RData&quot;) ggplot(population_mondiale)+ aes(x = annee, y = population)+ theme(panel.background = element_blank(), panel.grid = element_line(color = &quot;#8ccde3&quot;, size = 0.2, linetype = 1), axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ xlab(&quot;Année&quot;)+ ylab(&quot;Population&quot;)+ geom_line(color = &quot;red&quot;) 3.1.2 Nourriture load(&quot;nourriture.RData&quot;) nourriture_mondiale &lt;- nourriture |&gt; filter(region == &quot;World&quot;) save(nourriture_mondiale, file = &quot;nourriture_mondiale.RData&quot;) ggplot(nourriture_mondiale)+ aes(x = annee, y = production, color=Item)+ theme(panel.background = element_blank(), panel.grid = element_line(color = &quot;#8ccde3&quot;, size = 0.2, linetype = 1), legend.position = &quot;right&quot;, axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ geom_line(aes(group = Item)) 3.1.3 Source d’énergie load(&quot;energy_source.Rdata&quot;) energy_source_monde &lt;- energy_source |&gt; filter(country == &quot;World&quot;) save(energy_source_monde, file = &quot;energy_source_monde.RData&quot;) ggplot(subset(energy_source_monde, consumption &gt; 0))+ aes(x = annee, y = consumption, fill=energy_source)+ theme(panel.background = element_blank(), legend.position = &quot;right&quot;, axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ geom_col() 3.1.4 Type d’énergie load(&quot;energy_type.RData&quot;) energy_type_monde &lt;- energy_type |&gt; filter(country == &quot;World&quot;) save(energy_type_monde, file = &quot;energy_type_monde.RData&quot;) ggplot(subset(energy_type_monde, consumption &gt; 0))+ aes(x = annee, y = consumption, fill=energy_type)+ theme(panel.background = element_blank(), legend.position = &quot;right&quot;, axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ geom_col() 3.2 Analyse par continent 3.2.1 Population load(&quot;population.RData&quot;) population_continent &lt;- population |&gt; filter (Type == &quot;Region&quot;) save(population_continent, file = &quot;population_continent.RData&quot;) ggplot(population_continent)+ aes(annee, population, color = region)+ theme(panel.background = element_blank(), legend.position = &quot;bottom&quot;, panel.grid = element_line(color = &quot;#8ccde3&quot;, size = 0.2, linetype = 1), axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ geom_line() 3.2.2 Nourriture load(&quot;nourriture.Rdata&quot;) nourriture_continent &lt;- nourriture |&gt; filter(region == &quot;Europe&quot; | region == &quot;Africa&quot; | region == &quot;Asia&quot; | region == &quot;Northern America&quot; | region == &quot;South America&quot; | region == &quot;Oceania&quot;) save(nourriture_continent, file = &quot;nourriture_continent.RData&quot;) ggplot(nourriture_continent)+ aes(x = annee, y = production, color=Item)+ theme(panel.background = element_blank(), legend.position = &quot;right&quot;, axis.text.x = element_text(angle = 45, hjust=1, vjust=1), axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ facet_grid(~region)+ geom_line() 3.2.3 Source d’énergie load(&quot;energy_source.RData&quot;) energy_source_continent &lt;- energy_source |&gt; group_by(region, annee, energy_source) |&gt; summarize(consumption = sum(consumption, na.rm = TRUE)) |&gt; filter(region != &quot;NA&quot;) |&gt; ungroup() save(energy_source_continent, file = &quot;energy_source_continent.RData&quot;) ggplot(subset(energy_source_continent, consumption &gt; 0))+ aes(x = annee, y = consumption, fill=energy_source)+ theme(panel.background = element_blank(), legend.position = &quot;right&quot;, axis.text.x = element_text(angle = 45), axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ facet_grid(~region)+ geom_col() 3.2.4 Type d’énergie load(&quot;energy_type.RData&quot;) energy_type_continent &lt;- energy_type |&gt; group_by(region, annee, energy_type) |&gt; summarize(consumption = sum(consumption, na.rm = TRUE)) |&gt; filter(region != &quot;NA&quot;) |&gt; ungroup() save(energy_type_continent, file = &quot;energy_type_continent.RData&quot;) ggplot(subset(energy_type_continent, consumption &gt; 0))+ aes(x = annee, y = consumption, fill=energy_type)+ theme(panel.background = element_blank(), legend.position = &quot;right&quot;, axis.text.x = element_text(angle = 45), axis.line = element_line(size = 0.5, colour = &quot;black&quot;, linetype=1))+ facet_grid(~region)+ geom_col() 3.3 Analyse par pays 3.3.1 Population load(&quot;population.RData&quot;) load(&quot;BetterWorld.RData&quot;) population_pays &lt;- population |&gt; filter(Type == &quot;Country/Area&quot;) |&gt; select(-(1:2)) |&gt; right_join(BetterWorld |&gt; select(iso_a3, geom2), by=c(&quot;iso_code2&quot; = &quot;iso_a3&quot;)) save(population_pays, file=&quot;population_pays.RData&quot;) save(population_pays, file=&quot;~/R_studio/Projet/indicateurs_mondiaux/population_pays.RData&quot;) save(population_pays, file=&quot;~/R_studio/Projet/cartes/population_pays_carto.RData&quot;) population_pays |&gt; filter(annee == 2010 | is.na(annee)) |&gt; ggplot() + geom_sf(aes(fill = log10(population), geometry = geom2),color=&quot;white&quot;,size=.2)+ coord_sf(crs = st_crs(&#39;ESRI:54030&#39;))+ scale_fill_viridis_c()+ theme_minimal()+ theme(panel.background = element_rect(fill = &quot;light blue&quot;)) 3.3.2 Nourriture load(&quot;nourriture.RData&quot;) load(&quot;BetterWorld.RData&quot;) nourriture_pays &lt;- nourriture |&gt; filter(!is.na(iso_code2)) |&gt; select(-1) |&gt; right_join(BetterWorld |&gt; select(iso_a3, geom2), by=c(&quot;iso_code2&quot; = &quot;iso_a3&quot;)) |&gt; arrange(iso_pays, annee, Item) save(nourriture_pays, file=&quot;nourriture_pays.RData&quot;) save(nourriture_pays, file=&quot;~/R_studio/Projet/indicateurs_mondiaux/nourriture_pays.RData&quot;) save(nourriture_pays, file=&quot;~/R_studio/Projet/cartes/nourriture_pays_carto.RData&quot;) nourriture_pays |&gt; filter(annee == 2010 | is.na(annee)) |&gt; filter(Item == &quot;Cereals&quot; | is.na(Item)) |&gt; ggplot() + geom_sf(aes(fill = production, geometry = geom2),color=&quot;white&quot;,size=.2)+ coord_sf(crs = st_crs(&#39;ESRI:54030&#39;))+ scale_fill_viridis_c()+ theme_minimal()+ theme(panel.background = element_rect(fill = &quot;light blue&quot;)) 3.3.3 Source energie # Suppression des pays qui n&#39;on pas de iso_code 2 mais on conserve les 4 pays ci-dessous load(&quot;energy_source.RData&quot;) load(&quot;World.RData&quot;) energy_source_pays &lt;- energy_source |&gt; filter(!is.na(iso_pays)) |&gt; select(annee, iso_pays, iso_code2, energy_source, consumption) |&gt; right_join(BetterWorld |&gt; select(iso_a3, geom2), by=c(&quot;iso_code2&quot; = &quot;iso_a3&quot;)) |&gt; arrange(iso_pays, annee, energy_source) save(energy_source_pays, file=&quot;energy_source_pays.RData&quot;) save(energy_source_pays, file=&quot;~/R_studio/Projet/indicateurs_mondiaux/energy_source_pays.RData&quot;) save(energy_source_pays, file=&quot;~/R_studio/Projet/cartes/energy_source_pays_carto.RData&quot;) 3.3.4 Type energie # Suppression des pays qui n&#39;on pas de iso_code 2 mais on conserve les 4 pays ci-dessous load(&quot;energy_type.RData&quot;) load(&quot;BetterWorld.RData&quot;) energy_type_pays &lt;- energy_type |&gt; filter(!is.na(iso_code2)) |&gt; select(annee, iso_pays, iso_code2, energy_type, consumption) |&gt; right_join(BetterWorld |&gt; select(iso_a3, geom2), by=c(&quot;iso_code2&quot; = &quot;iso_a3&quot;)) |&gt; arrange(iso_pays, annee, energy_type) save(energy_type_pays, file=&quot;energy_type_pays.RData&quot;) save(energy_type_pays, file=&quot;~/R_studio/Projet/indicateurs_mondiaux/energy_type_pays.RData&quot;) save(energy_type_pays, file=&quot;~/R_studio/Projet/cartes/energy_type_pays_carto.RData&quot;) 3.3.5 Liste de l’ensemble des iso_pays présents liste_pays &lt;- population_pays |&gt; distinct(iso_pays) |&gt; full_join(nourriture_pays |&gt; distinct(iso_pays)) |&gt; full_join(energy_type |&gt; distinct(iso_pays)) |&gt; arrange(iso_pays) save(liste_pays, file=&quot;liste_pays.RData&quot;) save(liste_pays, file=&quot;~/R_studio/Projet/indicateurs_mondiaux/liste_pays.RData&quot;) 3.4 Column 3.4.1 Evolution de la population mondiale 3.4.2 Evolution de la production mondiale de nourriture 3.5 Column 3.5.1 Evolution de la production mondiale de source d’énergie 3.5.2 Evolution de la production mondiale de type d’énergie 3.6 Column 3.6.1 Evolution de la population par continent 3.6.2 Evolution de la production de nourriture par continent 3.7 Column 3.7.1 Evolution de la production par continent de source d’énergie 3.7.2 Evolution de la production par continent de type d’énergie "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
